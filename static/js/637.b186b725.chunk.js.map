{"version":3,"file":"static/js/637.b186b725.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.jsx","components/DeleteMenu/DeleteMenu.styled.jsx","components/DeleteMenu/DeleteMenu.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","// import { statusFilters } from './constants';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterName) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterName.toLowerCase().trim())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts.operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nimport { Form } from './ContactForm.styled';\nimport { Input, Label, Button } from 'commonStyles/coommonStyles.styled';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  // console.log('first');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n    const repeatingName = contacts.find(contact => contact.name === name);\n\n    if (repeatingName) {\n      toast.info(`${name} is already in contacts.`);\n      return null;\n    }\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\n\n  return (\n    <Form className=\"form\" onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          // value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        <FaPhoneSquareAlt /> Add contact\n      </Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid;\n\n  gap: ${p => p.theme.space[6]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  @media screen and (max-width: 480px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    gap: ${p => p.theme.space[4]}px;\n  }\n`;\nexport const ItemName = styled.span`\n  /* max-width: 200px; */\n  /* overflow-wrap: break-word; */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  /* @media screen and (max-width: 480px) {\n    inline-size: 165px;\n  } */\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalWrapper = styled.div`\n  background-color: ${p => p.theme.colors.white};\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  border: 1px solid;\n      border-radius:8px;\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrapper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ onClose, children }) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleClose);\n    return () => {\n      document.removeEventListener('keydown', handleClose);\n    };\n  });\n\n  const handleClose = e => {\n    // console.log('keydown event: ', e);\n    if (e.code === 'Escape') {\n      onClose();\n    }\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleClose}>\n      <ModalWrapper>{children}</ModalWrapper>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n  padding: 20px;\n  border: 1px solid;\n      border-radius:8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/contacts.operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nimport { Form } from './EditForm.styled';\nimport { Input, Label, Button } from 'commonStyles/coommonStyles.styled';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\nimport { useState } from 'react';\n\nexport default function EditForm({ contact, onClose }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  // console.log('first');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.info(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const repeatingName = contacts.find(contact => contact.name === name);\n\n    if (repeatingName) {\n      toast.info(`${name} is already in contacts.`);\n      return null;\n    }\n\n    try {\n      dispatch(editContact({ id: contact.id, name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} was successfully changed`);\n    onClose();\n  };\n\n  return (\n    <Form className=\"form\" onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        <FaPhoneSquareAlt /> Edit contact\n      </Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n  padding: 20px;\n  border: 1px solid;\n  border-radius: 8px;\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const BtnWrapper = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\n","import { Button } from 'commonStyles/coommonStyles.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.operations';\nimport { BtnWrapper, Title, Wrapper } from './DeleteMenu.styled';\n\nexport const DeleteMenu = ({ userId, onClose }) => {\n  const dispatch = useDispatch();\n  return (\n    <Wrapper>\n      <Title>Are you sure you want to delete this contact?</Title>\n      <BtnWrapper>\n        <li>\n          <Button onClick={() => dispatch(deleteContact(userId))}>YES</Button>\n        </li>\n        <li>\n          <Button onClick={onClose}>NO</Button>\n        </li>\n      </BtnWrapper>\n    </Wrapper>\n  );\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'commonStyles/coommonStyles.styled';\nimport { ContactWrap, Item, ItemName } from './ContactListItem.styled';\nimport {\n  FaPhoneAlt,\n  FaUserAlt,\n  FaRegTrashAlt,\n  FaUserEdit,\n} from 'react-icons/fa';\n\nimport { Modal } from 'components/Modal/Modal';\nimport EditForm from 'components/EditForm/EditForm';\nimport { DeleteMenu } from 'components/DeleteMenu/DeleteMenu';\n\nconst ContactListItem = ({ id, number, name }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [userIdState, setUserIdState] = useState('');\n  return (\n    <Item key={id}>\n      <Button type=\"button\" onClick={() => setIsModalOpen(isOpen => !isOpen)}>\n        <FaUserEdit />\n      </Button>\n      <ContactWrap>\n        <ItemName>\n          <FaUserAlt fill=\"orange\" /> {name}:\n        </ItemName>\n        <span>\n          <FaPhoneAlt fill=\"orange\" /> {number}\n        </span>\n      </ContactWrap>\n      <Button type=\"button\" onClick={() => setUserIdState(id)}>\n        <FaRegTrashAlt />\n      </Button>\n      {isModalOpen && (\n        <Modal onClose={() => setIsModalOpen(isOpen => !isOpen)}>\n          <EditForm\n            contact={{ name, number, id }}\n            onClose={() => setIsModalOpen(isOpen => !isOpen)}\n          />\n        </Modal>\n      )}\n      {userIdState && (\n        <Modal onClose={() => setUserIdState('')}>\n          <DeleteMenu userId={userIdState} onClose={() => setUserIdState('')} />\n        </Modal>\n        //\n      )}\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { List } from './ContactList.styled';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  // console.log('object');\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, number, name }) => (\n        <ContactListItem key={id} id={id} number={number} name={name} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { Input, Label } from 'commonStyles/coommonStyles.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from '../commonStyles/Box';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts.operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //   const dispatch = useDispatch();\n  //   const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Your contacts</title>\n      </Helmet> */}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={5}\n        as=\"section\"\n      >\n        <h1>Phonebook</h1>\n        {isLoading && !error && <b>Request in progress...</b>}\n        {error && <b>{error}</b>}\n        <ContactForm />\n      </Box>\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={5}\n        as=\"section\"\n      >\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Box>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","name","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","filterName","contact","toLowerCase","includes","trim","Form","styled","p","theme","space","ContactForm","useSelector","dispatch","useDispatch","className","onSubmit","e","preventDefault","target","number","toast","newContact","addContact","reset","type","pattern","title","required","List","Item","fontWeights","bold","fontSizes","s","ItemName","ContactWrap","Overlay","ModalWrapper","colors","white","modalRoot","document","querySelector","Modal","onClose","children","useEffect","addEventListener","handleClose","removeEventListener","code","currentTarget","createPortal","onClick","EditForm","useState","setName","setNumber","handleChange","repeatingName","editContact","id","onChange","Wrapper","Title","BtnWrapper","DeleteMenu","userId","deleteContact","isModalOpen","setIsModalOpen","userIdState","setUserIdState","isOpen","fill","setFilter","ContactsPage","fetchContacts","Box","display","flexDirection","alignItems","gridGap","as"],"sourceRoot":""}